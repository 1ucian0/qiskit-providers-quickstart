- title: IBM Qiskit Runtime
  image: static/images/providers/qiskit-ibm-runtime.png
  description: >-
    Qiskit Runtime is a quantum computing service and programming model that allows users to optimize
    workloads and efficiently execute them on quantum systems at scale. The programming model extends
    the existing interface in Qiskit with a set of new primitive programs.
  installation: pip install qiskit-ibm-runtime
  websiteCta: 
    label: Website
    url: https://quantum-computing.ibm.com/lab/docs/iql/runtime/
  docsCta:
    label: Docs
    url: https://qiskit.org/documentation/partners/qiskit_ibm_runtime/
  sourceCta:
    label: GitHub
    url: https://github.com/Qiskit/qiskit-ibm-runtime
  helloWorldExample: |-
    from qiskit import QuantumCircuit
    from qiskit_ibm_runtime import QiskitRuntimeService, Sampler

    # Save an IBM Quantum account
    QiskitRuntimeService.save_account(channel="ibm_quantum", token="MY_IBM_QUANTUM_TOKEN")

    # Select a backend
    service = QiskitRuntimeService()
    backend = service.backend("ibmq_qasm_simulator")

    # Build a circuit
    circuit = QuantumCircuit(2, 2)
    circuit.h(0)
    circuit.cx(0,1)
    circuit.measure([0,1], [0,1])

    # Run the circuit and get result distribution
    sampler = Sampler(session=backend)
    job = sampler.run(circuit)
    quasi_dist = job.result().quasi_dists[0]
    print(quasi_dist)

- title: Qiskit IBM Provider
  image: static/images/providers/qiskit-ibm-runtime.png
  description: >-
    Qiskit Runtime is a quantum computing service and programming model that allows users to optimize
    workloads and efficiently execute them on quantum systems at scale. The programming model extends
    the existing interface in Qiskit with a set of new primitive programs.
  installation: pip install qiskit-ibm-runtime
  websiteCta: 
    label: Website
    url: https://quantum-computing.ibm.com/lab/docs/iql/runtime/
  docsCta:
    label: Docs
    url: https://qiskit.org/documentation/partners/qiskit_ibm_runtime/
  sourceCta:
    label: GitHub
    url: https://github.com/Qiskit/qiskit-ibm-runtime
  helloWorldExample: |-
    from qiskit import QuantumCircuit
    from qiskit_ibm_runtime import QiskitRuntimeService, Sampler

    # Save an IBM Quantum account
    QiskitRuntimeService.save_account(channel="ibm_quantum", token="MY_IBM_QUANTUM_TOKEN")

    # Select a backend
    service = QiskitRuntimeService()
    backend = service.backend("ibmq_qasm_simulator")

    # Build a circuit
    circuit = QuantumCircuit(2, 2)
    circuit.h(0)
    circuit.cx(0,1)
    circuit.measure([0,1], [0,1])

    # Run the circuit and get result distribution
    sampler = Sampler(session=backend)
    job = sampler.run(circuit)
    quasi_dist = job.result().quasi_dists[0]
    print(quasi_dist) 
